State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmts stmt
    3      | /* empty */

    4 stmt: exp SEMICOLON
    5     | if_stmt

    6 @1: /* empty */

    7 stmt: @1 while_stmt

    8 @2: /* empty */

    9 stmt: @2 for_stmt
   10     | ret_stmt
   11     | BREAK SEMICOLON
   12     | CONTINUE SEMICOLON
   13     | block
   14     | f_def
   15     | SEMICOLON

   16 exp: assign_exp
   17    | exp PLUS exp
   18    | exp MINUS exp
   19    | exp MULTIPLY exp
   20    | exp DIV exp
   21    | exp MOD exp
   22    | exp LESS_THAN exp
   23    | exp GREATER_THAN exp
   24    | exp LESS_EQUAL exp
   25    | exp GREATER_EQUAL exp
   26    | exp AND M exp
   27    | exp OR M exp
   28    | exp EQUAL exp
   29    | exp NOT_EQUAL exp
   30    | term

   31 term: L_PARENTHESIS exp R_PARENTHESIS
   32     | MINUS exp
   33     | NOT exp
   34     | PLUS_PLUS lvalue
   35     | lvalue PLUS_PLUS
   36     | MINUS_MINUS lvalue
   37     | lvalue MINUS_MINUS
   38     | primary

   39 assign_exp: lvalue ASSIGN exp

   40 primary: lvalue
   41        | call
   42        | obj_def
   43        | L_PARENTHESIS f_def R_PARENTHESIS
   44        | const

   45 lvalue: ID
   46       | LOCAL ID
   47       | DOUBLE_COLON ID
   48       | member

   49 member: lvalue DOT ID
   50       | lvalue L_BRACKET exp R_BRACKET
   51       | call DOT ID
   52       | call L_BRACKET exp R_BRACKET

   53 call: call L_PARENTHESIS elist R_PARENTHESIS
   54     | lvalue callsuffix
   55     | L_PARENTHESIS f_def R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

   56 callsuffix: normcall
   57           | methodcall

   58 normcall: L_PARENTHESIS elist R_PARENTHESIS

   59 methodcall: DOUBLE_DOT ID L_PARENTHESIS elist R_PARENTHESIS

   60 elist: exp
   61      | elist COMMA exp
   62      | /* empty */

   63 obj_def: L_BRACKET indexed R_BRACKET
   64        | L_BRACKET elist R_BRACKET

   65 indexed: index_el
   66        | indexed COMMA index_el

   67 index_el: L_BRACE exp COLON exp R_BRACE

   68 @3: /* empty */

   69 block: L_BRACE @3 stmts R_BRACE

   70 funcblockstart: /* empty */

   71 funcblockend: /* empty */

   72 funcname: ID
   73         | /* empty */

   74 funcprefix: FUNCTION funcname

   75 @4: /* empty */

   76 funcargs: L_PARENTHESIS @4 idlist R_PARENTHESIS

   77 @5: /* empty */

   78 funcbody: @5 funcblockstart block funcblockend

   79 f_def: funcprefix funcargs funcbody

   80 const: INTCONST
   81      | REALCONST
   82      | STRING
   83      | NIL
   84      | TRUE
   85      | FALSE

   86 idlist: ID
   87       | idlist COMMA ID
   88       | /* empty */

   89 if_stmt: if_prefix stmt
   90        | if_prefix stmt else_prefix stmt

   91 if_prefix: IF L_PARENTHESIS exp R_PARENTHESIS

   92 else_prefix: ELSE

   93 loopstart: /* empty */

   94 loopend: /* empty */

   95 loopstmt: loopstart stmt loopend

   96 while_stmt: whilestart whilecond loopstmt

   97 whilestart: WHILE

   98 whilecond: L_PARENTHESIS exp R_PARENTHESIS

   99 for_prefix: FOR L_PARENTHESIS elist SEMICOLON M exp SEMICOLON

  100 for_stmt: for_prefix N elist R_PARENTHESIS N loopstmt N

  101 ret_stmt: RETURN SEMICOLON
  102         | RETURN exp SEMICOLON

  103 N: /* empty */

  104 M: /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
INTCONST (258) 80
REALCONST (259) 81
ID (260) 45 46 47 49 51 59 72 86 87
STRING (261) 82
IF (262) 91
ELSE (263) 92
WHILE (264) 97
FOR (265) 99
FUNCTION (266) 74
RETURN (267) 101 102
BREAK (268) 11
CONTINUE (269) 12
AND (270) 26
NOT (271) 33
OR (272) 27
LOCAL (273) 46
TRUE (274) 84
FALSE (275) 85
NIL (276) 83
ASSIGN (277) 39
PLUS (278) 17
MINUS (279) 18 32
MULTIPLY (280) 19
DIV (281) 20
MOD (282) 21
PLUS_PLUS (283) 34 35
MINUS_MINUS (284) 36 37
LESS_THAN (285) 22
GREATER_THAN (286) 23
LESS_EQUAL (287) 24
GREATER_EQUAL (288) 25
EQUAL (289) 28
NOT_EQUAL (290) 29
L_BRACE (291) 67 69
R_BRACE (292) 67 69
L_PARENTHESIS (293) 31 43 53 55 58 59 76 91 98 99
R_PARENTHESIS (294) 31 43 53 55 58 59 76 91 98 100
L_BRACKET (295) 50 52 63 64
R_BRACKET (296) 50 52 63 64
SEMICOLON (297) 4 11 12 15 99 101 102
COMMA (298) 61 66 87
COLON (299) 67
DOUBLE_COLON (300) 47
DOT (301) 49 51
DOUBLE_DOT (302) 59
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
stmts (51)
    on left: 2 3, on right: 1 2 69
stmt (52)
    on left: 4 5 7 9 10 11 12 13 14 15, on right: 2 89 90 95
@1 (53)
    on left: 6, on right: 7
@2 (54)
    on left: 8, on right: 9
exp (55)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30,
    on right: 4 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 39
    50 52 60 61 67 91 98 99 102
term (56)
    on left: 31 32 33 34 35 36 37 38, on right: 30
assign_exp (57)
    on left: 39, on right: 16
primary (58)
    on left: 40 41 42 43 44, on right: 38
lvalue (59)
    on left: 45 46 47 48, on right: 34 35 36 37 39 40 49 50 54
member (60)
    on left: 49 50 51 52, on right: 48
call (61)
    on left: 53 54 55, on right: 41 51 52 53
callsuffix (62)
    on left: 56 57, on right: 54
normcall (63)
    on left: 58, on right: 56
methodcall (64)
    on left: 59, on right: 57
elist (65)
    on left: 60 61 62, on right: 53 55 58 59 61 64 99 100
obj_def (66)
    on left: 63 64, on right: 42
indexed (67)
    on left: 65 66, on right: 63 66
index_el (68)
    on left: 67, on right: 65 66
block (69)
    on left: 69, on right: 13 78
@3 (70)
    on left: 68, on right: 69
funcblockstart (71)
    on left: 70, on right: 78
funcblockend (72)
    on left: 71, on right: 78
funcname (73)
    on left: 72 73, on right: 74
funcprefix (74)
    on left: 74, on right: 79
funcargs (75)
    on left: 76, on right: 79
@4 (76)
    on left: 75, on right: 76
funcbody (77)
    on left: 78, on right: 79
@5 (78)
    on left: 77, on right: 78
f_def (79)
    on left: 79, on right: 14 43 55
const (80)
    on left: 80 81 82 83 84 85, on right: 44
idlist (81)
    on left: 86 87 88, on right: 76 87
if_stmt (82)
    on left: 89 90, on right: 5
if_prefix (83)
    on left: 91, on right: 89 90
else_prefix (84)
    on left: 92, on right: 90
loopstart (85)
    on left: 93, on right: 95
loopend (86)
    on left: 94, on right: 95
loopstmt (87)
    on left: 95, on right: 96 100
while_stmt (88)
    on left: 96, on right: 7
whilestart (89)
    on left: 97, on right: 96
whilecond (90)
    on left: 98, on right: 96
for_prefix (91)
    on left: 99, on right: 100
for_stmt (92)
    on left: 100, on right: 9
ret_stmt (93)
    on left: 101 102, on right: 10
N (94)
    on left: 103, on right: 100
M (95)
    on left: 104, on right: 26 27 99


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (stmts)

    program  go to state 1
    stmts    go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: stmts .
    2 stmts: stmts . stmt

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    IF             shift, and go to state 8
    FUNCTION       shift, and go to state 9
    RETURN         shift, and go to state 10
    BREAK          shift, and go to state 11
    CONTINUE       shift, and go to state 12
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_BRACE        shift, and go to state 21
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    SEMICOLON      shift, and go to state 24
    DOUBLE_COLON   shift, and go to state 25

    WHILE     reduce using rule 6 (@1)
    FOR       reduce using rule 8 (@2)
    $default  reduce using rule 1 (program)

    stmt        go to state 26
    @1          go to state 27
    @2          go to state 28
    exp         go to state 29
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    block       go to state 37
    funcprefix  go to state 38
    f_def       go to state 39
    const       go to state 40
    if_stmt     go to state 41
    if_prefix   go to state 42
    ret_stmt    go to state 43


state 3

    0 $accept: program $end .

    $default  accept


state 4

   80 const: INTCONST .

    $default  reduce using rule 80 (const)


state 5

   81 const: REALCONST .

    $default  reduce using rule 81 (const)


state 6

   45 lvalue: ID .

    $default  reduce using rule 45 (lvalue)


state 7

   82 const: STRING .

    $default  reduce using rule 82 (const)


state 8

   91 if_prefix: IF . L_PARENTHESIS exp R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 44


state 9

   74 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 45

    $default  reduce using rule 73 (funcname)

    funcname  go to state 46


state 10

  101 ret_stmt: RETURN . SEMICOLON
  102         | RETURN . exp SEMICOLON

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    SEMICOLON      shift, and go to state 47
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 48
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 11

   11 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 49


state 12

   12 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 50


state 13

   33 term: NOT . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 51
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 14

   46 lvalue: LOCAL . ID

    ID  shift, and go to state 52


state 15

   84 const: TRUE .

    $default  reduce using rule 84 (const)


state 16

   85 const: FALSE .

    $default  reduce using rule 85 (const)


state 17

   83 const: NIL .

    $default  reduce using rule 83 (const)


state 18

   32 term: MINUS . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 53
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 19

   34 term: PLUS_PLUS . lvalue

    ID             shift, and go to state 6
    LOCAL          shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 54
    DOUBLE_COLON   shift, and go to state 25

    lvalue  go to state 55
    member  go to state 34
    call    go to state 56


state 20

   36 term: MINUS_MINUS . lvalue

    ID             shift, and go to state 6
    LOCAL          shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 54
    DOUBLE_COLON   shift, and go to state 25

    lvalue  go to state 57
    member  go to state 34
    call    go to state 56


state 21

   69 block: L_BRACE . @3 stmts R_BRACE

    $default  reduce using rule 68 (@3)

    @3  go to state 58


state 22

   31 term: L_PARENTHESIS . exp R_PARENTHESIS
   43 primary: L_PARENTHESIS . f_def R_PARENTHESIS
   55 call: L_PARENTHESIS . f_def R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    FUNCTION       shift, and go to state 9
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 59
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    funcprefix  go to state 38
    f_def       go to state 60
    const       go to state 40


state 23

   63 obj_def: L_BRACKET . indexed R_BRACKET
   64        | L_BRACKET . elist R_BRACKET

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_BRACE        shift, and go to state 61
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    $default  reduce using rule 62 (elist)

    exp         go to state 62
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 63
    obj_def     go to state 36
    indexed     go to state 64
    index_el    go to state 65
    const       go to state 40


state 24

   15 stmt: SEMICOLON .

    $default  reduce using rule 15 (stmt)


state 25

   47 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 66


state 26

    2 stmts: stmts stmt .

    $default  reduce using rule 2 (stmts)


state 27

    7 stmt: @1 . while_stmt

    WHILE  shift, and go to state 67

    while_stmt  go to state 68
    whilestart  go to state 69


state 28

    9 stmt: @2 . for_stmt

    FOR  shift, and go to state 70

    for_prefix  go to state 71
    for_stmt    go to state 72


state 29

    4 stmt: exp . SEMICOLON
   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    SEMICOLON      shift, and go to state 86


state 30

   30 exp: term .

    $default  reduce using rule 30 (exp)


state 31

   16 exp: assign_exp .

    $default  reduce using rule 16 (exp)


state 32

   38 term: primary .

    $default  reduce using rule 38 (term)


state 33

   35 term: lvalue . PLUS_PLUS
   37     | lvalue . MINUS_MINUS
   39 assign_exp: lvalue . ASSIGN exp
   40 primary: lvalue .
   49 member: lvalue . DOT ID
   50       | lvalue . L_BRACKET exp R_BRACKET
   54 call: lvalue . callsuffix

    ASSIGN         shift, and go to state 87
    PLUS_PLUS      shift, and go to state 88
    MINUS_MINUS    shift, and go to state 89
    L_PARENTHESIS  shift, and go to state 90
    L_BRACKET      shift, and go to state 91
    DOT            shift, and go to state 92
    DOUBLE_DOT     shift, and go to state 93

    $default  reduce using rule 40 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


state 34

   48 lvalue: member .

    $default  reduce using rule 48 (lvalue)


state 35

   41 primary: call .
   51 member: call . DOT ID
   52       | call . L_BRACKET exp R_BRACKET
   53 call: call . L_PARENTHESIS elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 97
    L_BRACKET      shift, and go to state 98
    DOT            shift, and go to state 99

    $default  reduce using rule 41 (primary)


state 36

   42 primary: obj_def .

    $default  reduce using rule 42 (primary)


state 37

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


state 38

   79 f_def: funcprefix . funcargs funcbody

    L_PARENTHESIS  shift, and go to state 100

    funcargs  go to state 101


state 39

   14 stmt: f_def .

    $default  reduce using rule 14 (stmt)


state 40

   44 primary: const .

    $default  reduce using rule 44 (primary)


state 41

    5 stmt: if_stmt .

    $default  reduce using rule 5 (stmt)


state 42

   89 if_stmt: if_prefix . stmt
   90        | if_prefix . stmt else_prefix stmt

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    IF             shift, and go to state 8
    FUNCTION       shift, and go to state 9
    RETURN         shift, and go to state 10
    BREAK          shift, and go to state 11
    CONTINUE       shift, and go to state 12
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_BRACE        shift, and go to state 21
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    SEMICOLON      shift, and go to state 24
    DOUBLE_COLON   shift, and go to state 25

    FOR       reduce using rule 8 (@2)
    $default  reduce using rule 6 (@1)

    stmt        go to state 102
    @1          go to state 27
    @2          go to state 28
    exp         go to state 29
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    block       go to state 37
    funcprefix  go to state 38
    f_def       go to state 39
    const       go to state 40
    if_stmt     go to state 41
    if_prefix   go to state 42
    ret_stmt    go to state 43


state 43

   10 stmt: ret_stmt .

    $default  reduce using rule 10 (stmt)


state 44

   91 if_prefix: IF L_PARENTHESIS . exp R_PARENTHESIS

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 103
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 45

   72 funcname: ID .

    $default  reduce using rule 72 (funcname)


state 46

   74 funcprefix: FUNCTION funcname .

    $default  reduce using rule 74 (funcprefix)


state 47

  101 ret_stmt: RETURN SEMICOLON .

    $default  reduce using rule 101 (ret_stmt)


state 48

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
  102 ret_stmt: RETURN exp . SEMICOLON

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    SEMICOLON      shift, and go to state 104


state 49

   11 stmt: BREAK SEMICOLON .

    $default  reduce using rule 11 (stmt)


state 50

   12 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 12 (stmt)


state 51

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   33 term: NOT exp .

    $default  reduce using rule 33 (term)


state 52

   46 lvalue: LOCAL ID .

    $default  reduce using rule 46 (lvalue)


state 53

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   32 term: MINUS exp .

    $default  reduce using rule 32 (term)


state 54

   55 call: L_PARENTHESIS . f_def R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

    FUNCTION  shift, and go to state 9

    funcprefix  go to state 38
    f_def       go to state 105


state 55

   34 term: PLUS_PLUS lvalue .
   49 member: lvalue . DOT ID
   50       | lvalue . L_BRACKET exp R_BRACKET
   54 call: lvalue . callsuffix

    L_PARENTHESIS  shift, and go to state 90
    L_BRACKET      shift, and go to state 91
    DOT            shift, and go to state 92
    DOUBLE_DOT     shift, and go to state 93

    $default  reduce using rule 34 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


state 56

   51 member: call . DOT ID
   52       | call . L_BRACKET exp R_BRACKET
   53 call: call . L_PARENTHESIS elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 97
    L_BRACKET      shift, and go to state 98
    DOT            shift, and go to state 99


state 57

   36 term: MINUS_MINUS lvalue .
   49 member: lvalue . DOT ID
   50       | lvalue . L_BRACKET exp R_BRACKET
   54 call: lvalue . callsuffix

    L_PARENTHESIS  shift, and go to state 90
    L_BRACKET      shift, and go to state 91
    DOT            shift, and go to state 92
    DOUBLE_DOT     shift, and go to state 93

    $default  reduce using rule 36 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


state 58

   69 block: L_BRACE @3 . stmts R_BRACE

    $default  reduce using rule 3 (stmts)

    stmts  go to state 106


state 59

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   31 term: L_PARENTHESIS exp . R_PARENTHESIS

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    R_PARENTHESIS  shift, and go to state 107


state 60

   43 primary: L_PARENTHESIS f_def . R_PARENTHESIS
   55 call: L_PARENTHESIS f_def . R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 108


state 61

   67 index_el: L_BRACE . exp COLON exp R_BRACE

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 109
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 62

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   60 elist: exp .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85

    $default  reduce using rule 60 (elist)


state 63

   61 elist: elist . COMMA exp
   64 obj_def: L_BRACKET elist . R_BRACKET

    R_BRACKET  shift, and go to state 110
    COMMA      shift, and go to state 111


state 64

   63 obj_def: L_BRACKET indexed . R_BRACKET
   66 indexed: indexed . COMMA index_el

    R_BRACKET  shift, and go to state 112
    COMMA      shift, and go to state 113


state 65

   65 indexed: index_el .

    $default  reduce using rule 65 (indexed)


state 66

   47 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 47 (lvalue)


state 67

   97 whilestart: WHILE .

    $default  reduce using rule 97 (whilestart)


state 68

    7 stmt: @1 while_stmt .

    $default  reduce using rule 7 (stmt)


state 69

   96 while_stmt: whilestart . whilecond loopstmt

    L_PARENTHESIS  shift, and go to state 114

    whilecond  go to state 115


state 70

   99 for_prefix: FOR . L_PARENTHESIS elist SEMICOLON M exp SEMICOLON

    L_PARENTHESIS  shift, and go to state 116


state 71

  100 for_stmt: for_prefix . N elist R_PARENTHESIS N loopstmt N

    $default  reduce using rule 103 (N)

    N  go to state 117


state 72

    9 stmt: @2 for_stmt .

    $default  reduce using rule 9 (stmt)


state 73

   26 exp: exp AND . M exp

    $default  reduce using rule 104 (M)

    M  go to state 118


state 74

   27 exp: exp OR . M exp

    $default  reduce using rule 104 (M)

    M  go to state 119


state 75

   17 exp: exp PLUS . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 120
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 76

   18 exp: exp MINUS . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 121
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 77

   19 exp: exp MULTIPLY . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 122
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 78

   20 exp: exp DIV . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 123
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 79

   21 exp: exp MOD . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 124
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 80

   22 exp: exp LESS_THAN . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 125
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 81

   23 exp: exp GREATER_THAN . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 126
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 82

   24 exp: exp LESS_EQUAL . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 127
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 83

   25 exp: exp GREATER_EQUAL . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 128
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 84

   28 exp: exp EQUAL . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 129
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 85

   29 exp: exp NOT_EQUAL . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 130
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 86

    4 stmt: exp SEMICOLON .

    $default  reduce using rule 4 (stmt)


state 87

   39 assign_exp: lvalue ASSIGN . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 131
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 88

   35 term: lvalue PLUS_PLUS .

    $default  reduce using rule 35 (term)


state 89

   37 term: lvalue MINUS_MINUS .

    $default  reduce using rule 37 (term)


state 90

   58 normcall: L_PARENTHESIS . elist R_PARENTHESIS

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    $default  reduce using rule 62 (elist)

    exp         go to state 62
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 132
    obj_def     go to state 36
    const       go to state 40


state 91

   50 member: lvalue L_BRACKET . exp R_BRACKET

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 133
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 92

   49 member: lvalue DOT . ID

    ID  shift, and go to state 134


state 93

   59 methodcall: DOUBLE_DOT . ID L_PARENTHESIS elist R_PARENTHESIS

    ID  shift, and go to state 135


state 94

   54 call: lvalue callsuffix .

    $default  reduce using rule 54 (call)


state 95

   56 callsuffix: normcall .

    $default  reduce using rule 56 (callsuffix)


state 96

   57 callsuffix: methodcall .

    $default  reduce using rule 57 (callsuffix)


state 97

   53 call: call L_PARENTHESIS . elist R_PARENTHESIS

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    $default  reduce using rule 62 (elist)

    exp         go to state 62
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 136
    obj_def     go to state 36
    const       go to state 40


state 98

   52 member: call L_BRACKET . exp R_BRACKET

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 137
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 99

   51 member: call DOT . ID

    ID  shift, and go to state 138


state 100

   76 funcargs: L_PARENTHESIS . @4 idlist R_PARENTHESIS

    $default  reduce using rule 75 (@4)

    @4  go to state 139


state 101

   79 f_def: funcprefix funcargs . funcbody

    $default  reduce using rule 77 (@5)

    funcbody  go to state 140
    @5        go to state 141


state 102

   89 if_stmt: if_prefix stmt .
   90        | if_prefix stmt . else_prefix stmt

    ELSE  shift, and go to state 142

    ELSE      [reduce using rule 89 (if_stmt)]
    $default  reduce using rule 89 (if_stmt)

    else_prefix  go to state 143


state 103

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   91 if_prefix: IF L_PARENTHESIS exp . R_PARENTHESIS

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    R_PARENTHESIS  shift, and go to state 144


state 104

  102 ret_stmt: RETURN exp SEMICOLON .

    $default  reduce using rule 102 (ret_stmt)


state 105

   55 call: L_PARENTHESIS f_def . R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 145


state 106

    2 stmts: stmts . stmt
   69 block: L_BRACE @3 stmts . R_BRACE

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    IF             shift, and go to state 8
    FUNCTION       shift, and go to state 9
    RETURN         shift, and go to state 10
    BREAK          shift, and go to state 11
    CONTINUE       shift, and go to state 12
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_BRACE        shift, and go to state 21
    R_BRACE        shift, and go to state 146
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    SEMICOLON      shift, and go to state 24
    DOUBLE_COLON   shift, and go to state 25

    FOR       reduce using rule 8 (@2)
    $default  reduce using rule 6 (@1)

    stmt        go to state 26
    @1          go to state 27
    @2          go to state 28
    exp         go to state 29
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    block       go to state 37
    funcprefix  go to state 38
    f_def       go to state 39
    const       go to state 40
    if_stmt     go to state 41
    if_prefix   go to state 42
    ret_stmt    go to state 43


state 107

   31 term: L_PARENTHESIS exp R_PARENTHESIS .

    $default  reduce using rule 31 (term)


state 108

   43 primary: L_PARENTHESIS f_def R_PARENTHESIS .
   55 call: L_PARENTHESIS f_def R_PARENTHESIS . L_PARENTHESIS elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 147

    $default  reduce using rule 43 (primary)


state 109

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   67 index_el: L_BRACE exp . COLON exp R_BRACE

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    COLON          shift, and go to state 148


state 110

   64 obj_def: L_BRACKET elist R_BRACKET .

    $default  reduce using rule 64 (obj_def)


state 111

   61 elist: elist COMMA . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 149
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 112

   63 obj_def: L_BRACKET indexed R_BRACKET .

    $default  reduce using rule 63 (obj_def)


state 113

   66 indexed: indexed COMMA . index_el

    L_BRACE  shift, and go to state 61

    index_el  go to state 150


state 114

   98 whilecond: L_PARENTHESIS . exp R_PARENTHESIS

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 151
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 115

   96 while_stmt: whilestart whilecond . loopstmt

    $default  reduce using rule 93 (loopstart)

    loopstart  go to state 152
    loopstmt   go to state 153


state 116

   99 for_prefix: FOR L_PARENTHESIS . elist SEMICOLON M exp SEMICOLON

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    $default  reduce using rule 62 (elist)

    exp         go to state 62
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 154
    obj_def     go to state 36
    const       go to state 40


state 117

  100 for_stmt: for_prefix N . elist R_PARENTHESIS N loopstmt N

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    $default  reduce using rule 62 (elist)

    exp         go to state 62
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 155
    obj_def     go to state 36
    const       go to state 40


state 118

   26 exp: exp AND M . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 156
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 119

   27 exp: exp OR M . exp

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 157
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 120

   17 exp: exp . PLUS exp
   17    | exp PLUS exp .
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    MULTIPLY  shift, and go to state 77
    DIV       shift, and go to state 78
    MOD       shift, and go to state 79

    $default  reduce using rule 17 (exp)


state 121

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   18    | exp MINUS exp .
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    MULTIPLY  shift, and go to state 77
    DIV       shift, and go to state 78
    MOD       shift, and go to state 79

    $default  reduce using rule 18 (exp)


state 122

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   19    | exp MULTIPLY exp .
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    $default  reduce using rule 19 (exp)


state 123

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   20    | exp DIV exp .
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    $default  reduce using rule 20 (exp)


state 124

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   21    | exp MOD exp .
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    $default  reduce using rule 21 (exp)


state 125

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   22    | exp LESS_THAN exp .
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIV       shift, and go to state 78
    MOD       shift, and go to state 79

    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (exp)


state 126

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   23    | exp GREATER_THAN exp .
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIV       shift, and go to state 78
    MOD       shift, and go to state 79

    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (exp)


state 127

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   24    | exp LESS_EQUAL exp .
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIV       shift, and go to state 78
    MOD       shift, and go to state 79

    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (exp)


state 128

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   25    | exp GREATER_EQUAL exp .
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    MULTIPLY  shift, and go to state 77
    DIV       shift, and go to state 78
    MOD       shift, and go to state 79

    LESS_THAN      error (nonassociative)
    GREATER_THAN   error (nonassociative)
    LESS_EQUAL     error (nonassociative)
    GREATER_EQUAL  error (nonassociative)

    $default  reduce using rule 25 (exp)


state 129

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   28    | exp EQUAL exp .
   29    | exp . NOT_EQUAL exp

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 28 (exp)


state 130

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   29    | exp NOT_EQUAL exp .

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 29 (exp)


state 131

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   39 assign_exp: lvalue ASSIGN exp .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85

    $default  reduce using rule 39 (assign_exp)


state 132

   58 normcall: L_PARENTHESIS elist . R_PARENTHESIS
   61 elist: elist . COMMA exp

    R_PARENTHESIS  shift, and go to state 158
    COMMA          shift, and go to state 111


state 133

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   50 member: lvalue L_BRACKET exp . R_BRACKET

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    R_BRACKET      shift, and go to state 159


state 134

   49 member: lvalue DOT ID .

    $default  reduce using rule 49 (member)


state 135

   59 methodcall: DOUBLE_DOT ID . L_PARENTHESIS elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 160


state 136

   53 call: call L_PARENTHESIS elist . R_PARENTHESIS
   61 elist: elist . COMMA exp

    R_PARENTHESIS  shift, and go to state 161
    COMMA          shift, and go to state 111


state 137

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   52 member: call L_BRACKET exp . R_BRACKET

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    R_BRACKET      shift, and go to state 162


state 138

   51 member: call DOT ID .

    $default  reduce using rule 51 (member)


state 139

   76 funcargs: L_PARENTHESIS @4 . idlist R_PARENTHESIS

    ID  shift, and go to state 163

    $default  reduce using rule 88 (idlist)

    idlist  go to state 164


state 140

   79 f_def: funcprefix funcargs funcbody .

    $default  reduce using rule 79 (f_def)


state 141

   78 funcbody: @5 . funcblockstart block funcblockend

    $default  reduce using rule 70 (funcblockstart)

    funcblockstart  go to state 165


state 142

   92 else_prefix: ELSE .

    $default  reduce using rule 92 (else_prefix)


state 143

   90 if_stmt: if_prefix stmt else_prefix . stmt

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    IF             shift, and go to state 8
    FUNCTION       shift, and go to state 9
    RETURN         shift, and go to state 10
    BREAK          shift, and go to state 11
    CONTINUE       shift, and go to state 12
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_BRACE        shift, and go to state 21
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    SEMICOLON      shift, and go to state 24
    DOUBLE_COLON   shift, and go to state 25

    FOR       reduce using rule 8 (@2)
    $default  reduce using rule 6 (@1)

    stmt        go to state 166
    @1          go to state 27
    @2          go to state 28
    exp         go to state 29
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    block       go to state 37
    funcprefix  go to state 38
    f_def       go to state 39
    const       go to state 40
    if_stmt     go to state 41
    if_prefix   go to state 42
    ret_stmt    go to state 43


state 144

   91 if_prefix: IF L_PARENTHESIS exp R_PARENTHESIS .

    $default  reduce using rule 91 (if_prefix)


state 145

   55 call: L_PARENTHESIS f_def R_PARENTHESIS . L_PARENTHESIS elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 147


state 146

   69 block: L_BRACE @3 stmts R_BRACE .

    $default  reduce using rule 69 (block)


state 147

   55 call: L_PARENTHESIS f_def R_PARENTHESIS L_PARENTHESIS . elist R_PARENTHESIS

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    $default  reduce using rule 62 (elist)

    exp         go to state 62
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 167
    obj_def     go to state 36
    const       go to state 40


state 148

   67 index_el: L_BRACE exp COLON . exp R_BRACE

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 168
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 149

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   61 elist: elist COMMA exp .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85

    $default  reduce using rule 61 (elist)


state 150

   66 indexed: indexed COMMA index_el .

    $default  reduce using rule 66 (indexed)


state 151

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   98 whilecond: L_PARENTHESIS exp . R_PARENTHESIS

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    R_PARENTHESIS  shift, and go to state 169


state 152

   95 loopstmt: loopstart . stmt loopend

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    IF             shift, and go to state 8
    FUNCTION       shift, and go to state 9
    RETURN         shift, and go to state 10
    BREAK          shift, and go to state 11
    CONTINUE       shift, and go to state 12
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_BRACE        shift, and go to state 21
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    SEMICOLON      shift, and go to state 24
    DOUBLE_COLON   shift, and go to state 25

    FOR       reduce using rule 8 (@2)
    $default  reduce using rule 6 (@1)

    stmt        go to state 170
    @1          go to state 27
    @2          go to state 28
    exp         go to state 29
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    block       go to state 37
    funcprefix  go to state 38
    f_def       go to state 39
    const       go to state 40
    if_stmt     go to state 41
    if_prefix   go to state 42
    ret_stmt    go to state 43


state 153

   96 while_stmt: whilestart whilecond loopstmt .

    $default  reduce using rule 96 (while_stmt)


state 154

   61 elist: elist . COMMA exp
   99 for_prefix: FOR L_PARENTHESIS elist . SEMICOLON M exp SEMICOLON

    SEMICOLON  shift, and go to state 171
    COMMA      shift, and go to state 111


state 155

   61 elist: elist . COMMA exp
  100 for_stmt: for_prefix N elist . R_PARENTHESIS N loopstmt N

    R_PARENTHESIS  shift, and go to state 172
    COMMA          shift, and go to state 111


state 156

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   26    | exp AND M exp .
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85

    $default  reduce using rule 26 (exp)


state 157

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   27    | exp OR M exp .
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp

    AND            shift, and go to state 73
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85

    $default  reduce using rule 27 (exp)


state 158

   58 normcall: L_PARENTHESIS elist R_PARENTHESIS .

    $default  reduce using rule 58 (normcall)


state 159

   50 member: lvalue L_BRACKET exp R_BRACKET .

    $default  reduce using rule 50 (member)


state 160

   59 methodcall: DOUBLE_DOT ID L_PARENTHESIS . elist R_PARENTHESIS

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    $default  reduce using rule 62 (elist)

    exp         go to state 62
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    elist       go to state 173
    obj_def     go to state 36
    const       go to state 40


state 161

   53 call: call L_PARENTHESIS elist R_PARENTHESIS .

    $default  reduce using rule 53 (call)


state 162

   52 member: call L_BRACKET exp R_BRACKET .

    $default  reduce using rule 52 (member)


state 163

   86 idlist: ID .

    $default  reduce using rule 86 (idlist)


state 164

   76 funcargs: L_PARENTHESIS @4 idlist . R_PARENTHESIS
   87 idlist: idlist . COMMA ID

    R_PARENTHESIS  shift, and go to state 174
    COMMA          shift, and go to state 175


state 165

   78 funcbody: @5 funcblockstart . block funcblockend

    L_BRACE  shift, and go to state 21

    block  go to state 176


state 166

   90 if_stmt: if_prefix stmt else_prefix stmt .

    $default  reduce using rule 90 (if_stmt)


state 167

   55 call: L_PARENTHESIS f_def R_PARENTHESIS L_PARENTHESIS elist . R_PARENTHESIS
   61 elist: elist . COMMA exp

    R_PARENTHESIS  shift, and go to state 177
    COMMA          shift, and go to state 111


state 168

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   67 index_el: L_BRACE exp COLON exp . R_BRACE

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    R_BRACE        shift, and go to state 178


state 169

   98 whilecond: L_PARENTHESIS exp R_PARENTHESIS .

    $default  reduce using rule 98 (whilecond)


state 170

   95 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 94 (loopend)

    loopend  go to state 179


state 171

   99 for_prefix: FOR L_PARENTHESIS elist SEMICOLON . M exp SEMICOLON

    $default  reduce using rule 104 (M)

    M  go to state 180


state 172

  100 for_stmt: for_prefix N elist R_PARENTHESIS . N loopstmt N

    $default  reduce using rule 103 (N)

    N  go to state 181


state 173

   59 methodcall: DOUBLE_DOT ID L_PARENTHESIS elist . R_PARENTHESIS
   61 elist: elist . COMMA exp

    R_PARENTHESIS  shift, and go to state 182
    COMMA          shift, and go to state 111


state 174

   76 funcargs: L_PARENTHESIS @4 idlist R_PARENTHESIS .

    $default  reduce using rule 76 (funcargs)


state 175

   87 idlist: idlist COMMA . ID

    ID  shift, and go to state 183


state 176

   78 funcbody: @5 funcblockstart block . funcblockend

    $default  reduce using rule 71 (funcblockend)

    funcblockend  go to state 184


state 177

   55 call: L_PARENTHESIS f_def R_PARENTHESIS L_PARENTHESIS elist R_PARENTHESIS .

    $default  reduce using rule 55 (call)


state 178

   67 index_el: L_BRACE exp COLON exp R_BRACE .

    $default  reduce using rule 67 (index_el)


state 179

   95 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 95 (loopstmt)


state 180

   99 for_prefix: FOR L_PARENTHESIS elist SEMICOLON M . exp SEMICOLON

    INTCONST       shift, and go to state 4
    REALCONST      shift, and go to state 5
    ID             shift, and go to state 6
    STRING         shift, and go to state 7
    NOT            shift, and go to state 13
    LOCAL          shift, and go to state 14
    TRUE           shift, and go to state 15
    FALSE          shift, and go to state 16
    NIL            shift, and go to state 17
    MINUS          shift, and go to state 18
    PLUS_PLUS      shift, and go to state 19
    MINUS_MINUS    shift, and go to state 20
    L_PARENTHESIS  shift, and go to state 22
    L_BRACKET      shift, and go to state 23
    DOUBLE_COLON   shift, and go to state 25

    exp         go to state 185
    term        go to state 30
    assign_exp  go to state 31
    primary     go to state 32
    lvalue      go to state 33
    member      go to state 34
    call        go to state 35
    obj_def     go to state 36
    const       go to state 40


state 181

  100 for_stmt: for_prefix N elist R_PARENTHESIS N . loopstmt N

    $default  reduce using rule 93 (loopstart)

    loopstart  go to state 152
    loopstmt   go to state 186


state 182

   59 methodcall: DOUBLE_DOT ID L_PARENTHESIS elist R_PARENTHESIS .

    $default  reduce using rule 59 (methodcall)


state 183

   87 idlist: idlist COMMA ID .

    $default  reduce using rule 87 (idlist)


state 184

   78 funcbody: @5 funcblockstart block funcblockend .

    $default  reduce using rule 78 (funcbody)


state 185

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . MULTIPLY exp
   20    | exp . DIV exp
   21    | exp . MOD exp
   22    | exp . LESS_THAN exp
   23    | exp . GREATER_THAN exp
   24    | exp . LESS_EQUAL exp
   25    | exp . GREATER_EQUAL exp
   26    | exp . AND M exp
   27    | exp . OR M exp
   28    | exp . EQUAL exp
   29    | exp . NOT_EQUAL exp
   99 for_prefix: FOR L_PARENTHESIS elist SEMICOLON M exp . SEMICOLON

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MULTIPLY       shift, and go to state 77
    DIV            shift, and go to state 78
    MOD            shift, and go to state 79
    LESS_THAN      shift, and go to state 80
    GREATER_THAN   shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    EQUAL          shift, and go to state 84
    NOT_EQUAL      shift, and go to state 85
    SEMICOLON      shift, and go to state 187


state 186

  100 for_stmt: for_prefix N elist R_PARENTHESIS N loopstmt . N

    $default  reduce using rule 103 (N)

    N  go to state 188


state 187

   99 for_prefix: FOR L_PARENTHESIS elist SEMICOLON M exp SEMICOLON .

    $default  reduce using rule 99 (for_prefix)


state 188

  100 for_stmt: for_prefix N elist R_PARENTHESIS N loopstmt N .

    $default  reduce using rule 100 (for_stmt)
